/* See LICENSE for copyright and distribution details.
 * Copyright Ryan Raymond 2022
 */

#include "main.h"

typedef struct
drop {
	gchar value;	/*	Value of character at the moment	*/
	guint length;	/*	Length of rain streak, is number of chars to tail (0-...)	*/
	guint velocity;	/*	Velocity is chance over 10  to move per cycle (1-10)	*/

	guint position_x;	/*	Current position of the cell on x axis	*/
	guint position_y;	/*	Current position of the cell on y axis	*/
} drop;

gchar
char_new_random();

drop
drop_new_random();	/*	Creates new drop with randomized values,
			 * except for position_y which will always be 0
			 */

gchar*
drop_print(drop _drop);

guint
length_new_random();

guint
position_new_random();

guint
velocity_new_random();

void
spawn();

gint
main(gint argc, gchar *argv[]);

guint MINIMUM_VELOCITY;
guint MAXIMUM_VELOCITY;

guint MINIMUM_LENGTH;
guint MAXIMUM_LENGTH;

guint SPAWN_TRIES;
guint SPAWN_CHANCE;

GList *first, *last;
guint drops;

gchar
char_new_random()
{
	return 'A';
}

gchar*
drop_print(drop _drop){
	GString *string;

	string = g_string_new("");
	g_string_printf(string,
			"Drop, Value: %c\nLength: %d, Velocity: %d\nX: %d, Y: %d\n",
			_drop.value, _drop.length, _drop.velocity,
			_drop.position_x, _drop.position_y);

	printf("%s\n", string->str);

	return string->str;
}

drop
drop_new_random()
{
	drop _drop;

	_drop.value = char_new_random();
	_drop.length = length_new_random();
	_drop.velocity = velocity_new_random();
	_drop.position_x = position_new_random();
	_drop.position_y = 0;	
	return _drop;
}

guint
length_new_random()
{
	return 1;
}

guint
position_new_random()
{
	return 1;
}

guint
velocity_new_random()
{
	return 1;
}

void
spawn(){
	int i;

	for (i=0;i<SPAWN_TRIES;i++){
		if (true) {	/*	Add RNG here	*/
			drop _drop = drop_new_random();
			if (first == NULL){
				printf("Empty List. Creating first node\n");
			
				first = g_list_append(first, &_drop);
				last = first;
			} else {
				printf("List is not empty. Appending\n");
				
				first = g_list_append(last, &_drop);
				
			}
		}	
	}


	return;
}

gint
main(gint argc, gchar *argv[])
{
	SPAWN_CHANCE=5;
	SPAWN_TRIES=5;


	drops = 0;
	first = NULL;	
	last = NULL;	
	
	spawn();	

	//drop_print( drop_new_random());
	


	return 0;

}

